require('dotenv').config();
const axios = require('axios');

const token = process.env.HUGGING_FACE_TOKEN;

console.log('\nüîç DIAGNOSTIC TOKEN HUGGING FACE\n');
console.log('1. Token charg√© depuis .env:', token ? '‚úÖ OUI' : '‚ùå NON');
console.log('2. D√©but du token:', token ? token.substring(0, 10) + '...' : 'AUCUN');
console.log('3. Longueur du token:', token ? token.length + ' caract√®res' : 'N/A');

if (!token) {
  console.log('\n‚ùå ERREUR: Le token n\'est pas charg√© depuis .env');
  console.log('V√©rifiez que le fichier .env existe et contient:');
  console.log('HUGGING_FACE_TOKEN=hf_votre_token_ici');
  process.exit(1);
}

console.log('\n4. Test de connexion √† Hugging Face...\n');

axios.post(
  'https://api-inference.huggingface.co/models/gpt2',
  { inputs: 'Hello, how are you?' },
  {
    headers: {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    },
    timeout: 10000
  }
)
.then(response => {
  console.log('‚úÖ SUCCESS: Token valide et API fonctionne !');
  console.log('\nR√©ponse de l\'API:');
  console.log(JSON.stringify(response.data, null, 2));
  console.log('\n‚úÖ Votre chatbot devrait fonctionner correctement.\n');
})
.catch(error => {
  console.log('‚ùå ERREUR lors de l\'appel API\n');
  
  if (error.response) {
    console.log('Status HTTP:', error.response.status);
    console.log('Message:', error.response.statusText);
    console.log('D√©tails:', error.response.data);
    
    if (error.response.status === 401) {
      console.log('\nüî¥ PROBL√àME: Token invalide ou expir√©');
      console.log('SOLUTION:');
      console.log('1. Allez sur https://huggingface.co/settings/tokens');
      console.log('2. Cr√©ez un nouveau token (type: Read)');
      console.log('3. Copiez-le dans .env: HUGGING_FACE_TOKEN=hf_...');
      console.log('4. Relancez ce test\n');
    } else if (error.response.status === 503) {
      console.log('\nüü° Le mod√®le est en cours de chargement');
      console.log('R√©essayez dans 30 secondes\n');
    }
  } else if (error.request) {
    console.log('‚ùå Pas de r√©ponse du serveur');
    console.log('V√©rifiez votre connexion internet\n');
  } else {
    console.log('‚ùå Erreur:', error.message, '\n');
  }
});