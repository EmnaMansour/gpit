name: CI/CD GPIT Docker + Cypress + SonarCloud

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: üì¶ Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Node.js
      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3Ô∏è‚É£ Install dependencies backend
      - name: Install backend dependencies
        working-directory: backend
        run: npm install

      # 4Ô∏è‚É£ Install dependencies frontend
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      # 5Ô∏è‚É£ Build Docker images
      - name: Build Docker backend
        run: docker build -t gpit-backend ./backend

      - name: Build Docker frontend
        run: docker build -t gpit-frontend ./frontend

      # 6Ô∏è‚É£ Run backend container for tests
      - name: Run backend container
        run: |
          docker run -d --name gpit-backend-test -p 8000:8000 --env-file ./backend/.env gpit-backend
          sleep 15

      # 7Ô∏è‚É£ Run Cypress E2E tests
      - name: Cypress E2E tests
        uses: cypress-io/github-action@v5
        with:
          start: docker run -d -p 5173:5173 gpit-frontend
          wait-on: http://localhost:5173
          wait-on-timeout: 60
          browser: chrome

      # 8Ô∏è‚É£ SonarCloud analysis
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          organization: ${{ secrets.SONAR_ORG }}
          token: ${{ secrets.SONAR_TOKEN }}
          projectKey: gestion_parc_info
          projectName: Gestion Parc Info
          extraProperties: |
            sonar.sources=backend,frontend/src
            sonar.tests=backend/__tests__,cypress/e2e
            sonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info

      # 9Ô∏è‚É£ Deploy to server via SSH
      - name: SSH Deploy to Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/gpit
            docker-compose down
            docker-compose pull
            docker-compose up -d --remove-orphans

      # üîü Test backend post-deploy
      - name: Test backend post-deploy
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.SERVER_IP }}:8000/api/health)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "‚ùå Backend non op√©rationnel !"
            exit 1
          else
            echo "‚úÖ Backend OK"

      # 1Ô∏è‚É£1Ô∏è‚É£ Test frontend post-deploy
      - name: Test frontend post-deploy
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.SERVER_IP }})
          if [ "$RESPONSE" -ne 200 ]; then
            echo "‚ùå Frontend non op√©rationnel !"
            exit 1
          else
            echo "‚úÖ Frontend OK"
