name:  GPIT CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test:
    name:  Build & Test Application
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: emna
          MONGO_INITDB_ROOT_PASSWORD: emna
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name:  Install backend dependencies
        working-directory: backend
        run: npm install

      - name:  Run backend tests
        working-directory: backend
        run: npm test || echo "No backend tests found"

      - name:  Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name:  Run Cypress E2E tests
        working-directory: frontend
        run: npx cypress run || echo "Cypress tests skipped"

  sonar:
    name: SonarQube Code Quality
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.projectKey=gpit
            -Dsonar.sources=.
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker:
    name:  Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: sonar

    steps:
      - name:  Checkout code
        uses: actions/checkout@v4

      - name:  Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name:  Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gpit-backend:latest

      - name:  Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gpit-frontend:latest

  deploy:
    name:  Deploy (optionnel)
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/main'

    steps:
      - name:  SSH Deploy to Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/gpit
            docker-compose pull
            docker-compose up -d --remove-orphans
